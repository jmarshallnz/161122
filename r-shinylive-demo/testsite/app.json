[{"name":"app.R","content":"#\n# This is a Shiny web application. You can run the application by clicking\n# the 'Run App' button above.\n#\n# Find out more about building applications with Shiny here:\n#\n#    https://shiny.posit.co/\n#\n\nlibrary(shiny)\nlibrary(dplyr)\nlibrary(bslib)\nOrange<-datasets::Orange\npart_orange <- sample_n(Orange, size = floor(nrow(Orange) / 2))\n\n# UI\nui <- fluidPage(\n  titlePanel(h2(\n    \"Regression By Eye - Beat The Computer!\", align = \"center\"\n  )),\n  \n  sidebarPanel(\n    h3('Data Selection'),\n    sliderInput(\n      'amount',\n      '1. Choose Proportion of Data To Use (%)',\n      min = 10,\n      max = 100,\n      value = 50,\n      step = 10\n    ),\n    h3('Estimate Intercept & Slope'),\n    sliderInput(\n      'intercept',\n      '2. Set the Intercept',\n      min = -400,\n      max = 800,\n      value = 0,\n      step = 20\n    ),\n    sliderInput(\n      'slope',\n      '3. Set the Slope',\n      min = 0,\n      max = 15,\n      value = 7,\n      step = 0.1\n    ),\n    actionButton('compare', \"4. Compare against computer!\", style =\n                   'margin:4px;')\n  ),\n  mainPanel(\n    plotOutput('plot1'),\n    verbatimTextOutput('Try to get within 5% of the computers RMSE!'),\n    verbatimTextOutput('your_score'),\n    verbatimTextOutput('pc_score'),\n    verbatimTextOutput('congrat_message')\n  )\n)\n\n# SERVER\nserver <- function(input, output) {\n  show <- reactiveValues(data = NULL)\n  \n  reset_inputs <- function() {\n    output$pc_score <- renderText({\n      paste(\"Computer's RMSE:\")\n    })\n    output$congrat_message <- renderText({\n      \"\"\n    })\n    #updateSliderInput(session, \"intercept\", value = 400)\n    #updateSliderInput(session, \"slope\", value = 4)\n  }\n  \n  generate_my_y <- function(a, b, df) {\n    x <- df$circumference\n    y <- a + b * x\n    return(y)\n  }\n  \n  calc_rmse <- function(y1, y2) {\n    rmse <- sqrt(sum((y1 - y2) ^ 2) / (length(y1) - 2))\n    return(rmse)\n  }\n  \n  part_orange <- reactive({\n    sample_n(Orange, size = floor(input$amount * nrow(Orange) / 100))\n  })\n  \n  observeEvent(input$compare, {\n    show$data <- TRUE\n  })\n  \n  \n  observeEvent(input$reg_model, {\n    show$data <- FALSE\n    reset_inputs()\n  })\n  \n  observeEvent(input$amount, {\n    show$data <- FALSE\n    reset_inputs()\n  })\n  \n  output$plot1 <- renderPlot({\n    df <- part_orange()\n    a <- input$intercept\n    b <- input$slope\n    reg <- input$reg_model\n    \n    my_y_data <- generate_my_y(a, b, df)\n    my_rmse <- calc_rmse(df$age, my_y_data)\n    \n    pc_model <- lm(age ~ circumference, data = df)\n    pc_rmse <- sqrt(sum(pc_model$residuals ^ 2) / (nrow(df) - 2))\n    \n    plot(\n      x = df$circumference,\n      y = df$age,\n      xlim = c(0, 200),\n      ylim = c(0, 1600),\n      pch = 19,\n      xlab = \"Age of tree (days)\",\n      ylab = \"Circumference of tree (mm)\",\n      main = \"Orange Tree Growth Regression\"\n    )\n    abline(\n      a = a,\n      b = b,\n      col = \"red\",\n      lwd = 2\n    )\n    if (isTRUE(show$data)) {\n      abline(pc_model, col = \"green\", lwd = 2)\n      output$pc_score <- renderText({\n        paste(\"Computer's RMSE:\", round(pc_rmse))\n      })\n      # Check if your score is within winning margin of PC score:\n      if (my_rmse >= 0.95 * pc_rmse &\n          my_rmse <= 1.05 * pc_rmse) {\n        output$congrat_message <- renderText({\n          (\"You RMSE is within 5% of computer's: You Win!!!\")\n        })\n      }\n    }\n    output$your_score <- renderText({\n      paste(\"Your RMSE:\", round(my_rmse))\n    })\n  })\n}\n\n\n# Run the application \nshinyApp(ui = ui, server = server)\n","type":"text"}]
